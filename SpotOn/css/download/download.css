@import url("https://github.com/SenpaiHunters/Pictures/raw/main/SpotOn%20Pics/fonts/JetBrainsMonoNL-Thin.ttf");

/* Global Color Variables */
:root {
  --light-bg: #f9f9f9;
  --dark-bg: #222222;
  --text: #333333;
  --dark-text: #ffffff;
  --highlight: #e600df;
  --dark-highlight: #b3005f;
  --watermark-color: #888;
  --header-color: #212121;
  --disabled: #520000;
  --dark-sidebar: #333333;
  --light-sidebar: #f0f0f0;
  --hover-bg: #e0e0e0; /* Background color on hover */
  --border-color: #ccc; /* Border color for headers and content */
  --content-bg: var(--main-bg); /* Background color for content */
}

/* Light Theme */
[data-theme="light"] {
  --main-bg: var(--light-bg);
  --text-color: var(--text);
  --highlight-color: var(--highlight);
  --sidebar: var(--light-sidebar);
}

/* Dark Theme */
[data-theme="dark"] {
  --main-bg: var(--dark-bg);
  --text-color: var(--dark-text);
  --highlight-color: var(--dark-highlight);
  --sidebar: var(--dark-sidebar);
}

/* Body Styles */
body {
  background-color: var(--main-bg);
  color: var(--text-color);
  font-family: sans-serif;
  margin: 0;
}
/*- Option Styles -*/

/*
* Theme toggle
*/
#theme-toggle {
  position: fixed;
}

/*
* Switches colour and var control
*/

.option.checkbox label {
  color: var(--text-color);
}

.option {
  position: relative;
  display: flex;
  align-items: center;
  color: var(--text-color);
}

.option:not(:first-child) {
  margin-top: 24px;
}

.option input,
.option select {
  position: absolute;
  right: 0;
}

.option.checkbox input {
  width: 40px;
  height: 20px;
  margin: auto;
  cursor: pointer;
  z-index: 1;
  opacity: 0;
}

.option {
  position: relative;
  display: flex;
  align-items: center;
  color: var(--text);
  margin-top: var(--margin-top);
}

.option label {
  display: inline-block;
  padding-right: 80px; /* Adjust the padding value as needed */
}

.option.checkbox label::before,
.option.checkbox label::after {
  content: "";
  position: absolute;
  border-radius: 10px;
  top: 0;
  bottom: 0;
  margin: auto;
  transition: background 0.3s, right 0.3s, box-shadow 0.3s;
}

/*
* switch colour control
*/
.option.checkbox label::before {
  height: 20px;
  width: 40px;
  right: 0;
  background: linear-gradient(
    to bottom,
    #f6a6ff,
    #d26ef1
  ); /* Gradient pink background */
  box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.2); /* Subtle shadow */
}

.option.checkbox label::after {
  height: 18px;
  width: 18px;
  right: 21px;
  background: linear-gradient(
    to bottom,
    #ffccf2,
    #f7c5eb
  ); /* Gradient purple background */
  border-radius: 50%; /* Circular shape for the toggle knob */
  position: absolute;
  transition: background 0.3s ease-in-out, right 0.3s ease-in-out,
    box-shadow 0.3s ease-in-out; /* Smooth animation */
  box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.2); /* Subtle shadow */
}

.option.checkbox label:hover::before {
  background: linear-gradient(
    to bottom,
    #f6a6ff,
    #d26ef1
  ); /* Hover effect gradient */
  box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.3); /* Slightly larger shadow on hover */
}

.option.checkbox label:hover::after {
  background: linear-gradient(
    to bottom,
    #ffccf2,
    #f7c5eb
  ); /* Hover effect gradient */
  right: 23px; /* Slightly adjust position on hover */
  box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.3); /* Slightly larger shadow on hover */
}

.option.checkbox input:checked + label::before {
  background: linear-gradient(
    to bottom,
    #dd1193,
    #b60d67
  ); /* Darker pink gradient for the enabled state */
  box-shadow: none; /* Remove shadow on checked state */
}

.option.checkbox input:checked + label::after {
  background: linear-gradient(
    to bottom,
    #e6ccf0,
    #d6b7e6
  ); /* Lighter purple gradient for the enabled state */
  right: 1px;
  box-shadow: none; /* Remove shadow on checked state */
}

/* IN dev css stuff */
#stylePreviewBox {
  width: 400px;
  height: 400px;
  background-color: lightgray;
  border: 2px solid black;
  margin: 20px;
  transition: background-color 0.3s, border-color 0.3s;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  background-size: contain;
  background-attachment: inherit;
  background-repeat: no-repeat;
}

#stylePreviewBox img {
  max-width: 100%;
  max-height: 100%;
  background-size: contain;
  background-attachment: inherit;
  background-repeat: no-repeat;
}

#stylePreviewBox.active {
  background-color: var(--main-bg);
  border-color: var(--border-color);
  animation: fadeIn 0.5s ease-in-out;
}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

/*- Question Mark -*/
#questionIcon {
  display: inline-block;
  margin-left: 5px;
  font-weight: bold;
  cursor: pointer;
  transition: color 0.3s ease, text-decoration 0.3s ease;
}

.option {
  position: relative;
}

#explanation {
  background-color: #f5f5f5;
  padding: 10px;
  border-radius: 4px;
  max-width: 300px;
  position: absolute;
  opacity: 0;
  transform: translateY(10px); /* Adjusted to start hidden */
  transition: opacity 0.3s ease, transform 0.3s ease, box-shadow 0.3s ease;
  pointer-events: none; /* Prevent interaction when hidden */
  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.4); /* Add a subtle shadow */
}

#questionIcon:hover + #explanation,
#explanation:hover {
  opacity: 1;
  transform: translateY(0);
  pointer-events: auto;
}

#questionIcon:hover {
  color: #dd1193; /* Change the color on hover */
  text-decoration: underline; /* Add underline on hover */
}

#questionIcon:focus {
  box-shadow: 0 0 3px rgba(0, 0, 0, 0.4); /* Add focus shadow */
}

/*- Watermark -*/
.watermark {
  position: fixed; /* Use fixed positioning */
  bottom: 10px;
  right: 10px;
  font-size: 12px;
  color: var(--watermark-color);
  opacity: 0.5;
  transition: opacity 0.2s ease-in-out;
}

.watermark:hover {
  opacity: 0.8;
}

.container {
  max-width: 60%;
  margin: auto;
}

#title {
  background-color: #636363;
  text-align: center;
  vertical-align: middle;
  font-size: 50px;
  color: var(--header-color);
  padding: 20px;
  text-decoration: none;
  border-radius: 15px;
  transition: font-size 1s;
}

#titleText {
  padding-left: 5px;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  color: var(--title);
}

p,
li,
#option,
textarea,
label,
.option label {
  font-size: 16px;
}

p,
li,
a,
span,
div,
#option,
textarea,
label,
.option label {
  color: var(--text-color);
}

/**/
#btn-back-to-top {
  position: fixed;
  bottom: 30px;
  right: 20px;
  display: none;
  background: linear-gradient(
    to bottom,
    #dd1193,
    #b60d67
  ); /* Button background gradient */
  color: var(--text-color); /* Text color */
  border: none;
  border-radius: 50%;
  padding: 9px;
  cursor: pointer;
  z-index: 9999;
  box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.1); /* Add a subtle shadow */
  transition: background-color 0.3s, transform 0.3s, opacity 0.3s,
    box-shadow 0.3s;
}

#btn-back-to-top:hover {
  background: linear-gradient(
    to bottom,
    #ffccf2,
    #f7c5eb
  ); /* Lighter color on hover */
  transform: scale(1.1); /* Slight scale increase on hover */
  box-shadow: 0px 6px 12px rgba(0, 0, 0, 0.2); /* Increased shadow on hover */
}

#btn-back-to-top i {
  font-size: 14px; /* Slightly larger icon size */
}
/**/

/* Apply a dark background color */
body {
  color: #dcdcdc;
  font-family: JetBrains Mono, sans-serif;
}

/* Adjust padding and margin for the content */
.content {
  padding: 20px;
  margin: 0 auto;
  max-width: 800px;
}

h1,
h2,
h3 {
  font-weight: bold;
  margin-top: 20px;
}

p {
  margin-top: 10px;
  line-height: 1.5;
}

.main-content {
  padding: 10px;
  margin-left: 15px;
  transition: margin-left 0.3s ease;
}

/*- sidebar -*/
.sidebar {
  background-color: var(--sidebar);
  color: white;
  width: 200px;
  position: fixed;
  top: 20px;
  bottom: 20px;
  left: 20px;
  overflow-y: auto;
  padding: 20px;
  z-index: 1;
  border-radius: 20px;
  transition: left 0.3s ease;
}

.sidebar ul {
  list-style-type: none;
  padding: 0;
}

.sidebar li {
  padding: 10px;
  transition: background-color 0.3s ease;
  border-radius: 20px;
}

.sidebar li:hover {
  background-color: rgba(255, 255, 255, 0.1);
  border-radius: 20px;
  text-decoration: none;
  transform: translateX(5px);
  transition: background-color 0.3s ease-in-out, transform 0.3s ease-in-out;
}

.sidebar a {
  color: var(--text-color);
  text-decoration: none;
}

/* Smaller displays */

@media only screen and (max-height: 735px),
  only screen and (max-width: 1250px) {
  #options-container {
    flex-direction: column;
    padding: 30px 3px 3px;
  }

  .container {
    gap: 13px;
    min-width: unset;
    max-width: unset;
    padding: 14px;
  }

  #navigation {
    gap: 12px;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
  }

  .sidebar {
    left: -220px; /* Hide the sidebar by default */
  }

  .main-content {
    margin-left: 0; /* Reset margin to remove space for the sidebar */
  }

  /* Show the sidebar on hover */
  .sidebar:hover {
    left: 0;
  }

  /* Adjust margin for content when the sidebar is open */
  .sidebar.open + .main-content {
    margin-left: 220px;
  }

  img,
  video {
    max-width: 550px; /* Use max-width to ensure content doesn't overflow */
    width: 100%; /* Make images and videos responsive */
  }

  #stylePreviewBox {
    max-width: 500px;
    width: 100%;
  }

  #cssInput {
    max-width: 500px;
    width: 100%;
  }
}
/*
SpotOn Development be like
         ／＞　　フ
　　　　　| 　-　 - l
　 　　　／` ミ＿xノ
　　 　 /　　　 　 |
　　　 /　 ヽ　-- ﾉ

*/

/*
* END
*/

/* code which looks like the markdown `` */
code {
  background-color: var(--text);
  padding: 0.2em;
  border-radius: 3px;
  font-family: "Courier New", monospace;
  transition: background-color 0.3s ease-in-out;
}

/* Dropdown */
.accordion-header {
  cursor: pointer;
  padding: 10px;
  background-color: var(--main-bg);
  border: 1px solid var(--border-color); /* Add border color */
  border-radius: 4px;
  margin: 0;
  transition: background-color 0.3s ease-in-out; /* Add smooth transition */
}

.accordion-header:hover {
  background-color: var(--hover-bg); /* Change background on hover */
}

.accordion-content {
  display: none;
  padding: 10px;
  border: 1px solid var(--border-color);
  border-top: none;
  background-color: var(--content-bg); /* Add background color */
}
